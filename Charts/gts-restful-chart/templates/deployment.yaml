# restful-server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gts-restful
  namespace: gts-lobby-server
  labels:
    app: gts-restful
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1        # 최대 1개의 새 파드 추가 허용
      maxUnavailable: 0  # 사용 불가능한 파드 허용하지 않음
  selector:
    matchLabels:
      app: gts-restful
  template:
    metadata:
      labels:
        app: gts-restful
    spec:
      imagePullSecrets:
        - name: regcred
      nodeSelector:
        nodePool: restful
      containers:
        - name: gts-restful
          image: "{{ .Values.restfulImage.repository }}:{{ .Values.gameVersion }}"
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "500m"
              memory: "1.5Gi"
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
          env:
            - name: NODE_ENV
              value: prod
            - name: VERSION
              value: "{{ .Values.gameVersion }}"
            - name: REDIS_PRIVATE_HOST
              value: "{{ .Values.redisInfo.redisPrivateHost }}"
            - name: REDIS_PUBLIC_HOST
              value: "{{ .Values.redisInfo.redisPublicHost }}"
            - name: REDIS_PORT
              value: "{{ .Values.redisInfo.redisPublicPort }}"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password
            - name: RABBITMQ_URL
              value: "{{ .Values.rabbitMQ.url }}"
            - name: S3_DATA_URL
              value: "{{ .Values.s3Data.url }}"
            - name: DB_HOST_PROD
              value: "{{ .Values.dbInfo.hostUrl }}"
            - name: DB_PASSWORD_PROD
              value: "{{ .Values.dbInfo.password }}"
            - name: BUILD_ENV
              value: "SERVER"
---
# socket-server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gts-socket
  namespace: gts-lobby-server
  labels:
    app: gts-socket
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1        # 최대 1개의 새 파드 추가 허용
      maxUnavailable: 0  # 사용 불가능한 파드 허용하지 않음
  selector:
    matchLabels:
      app: gts-socket
  template:
    metadata:
      labels:
        app: gts-socket
    spec:
      imagePullSecrets:
        - name: regcred
      nodeSelector:
        nodePool: restful
      containers:
        - name: gts-socket
          image: "{{ .Values.socketImage.repository }}:{{ .Values.gameVersion }}"
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: kubeconfig-volume
              mountPath: "/etc/kubeconfig"
          resources:
            requests:
              cpu: "500m"
              memory: "1.5Gi"
          env:
            - name: NODE_ENV
              value: prod
            - name: VERSION
              value: "{{ .Values.gameVersion }}"
            - name: DEPLOYMENT_LIFETIME
              value: "{{ .Values.deploymentLifeTime }}"
            - name: REDIS_PRIVATE_HOST
              value: "{{ .Values.redisInfo.redisPrivateHost }}"
            - name: REDIS_PUBLIC_HOST
              value: "{{ .Values.redisInfo.redisPublicHost }}"
            - name: REDIS_PRIVATE_PORT
              value: "{{ .Values.redisInfo.redisPrivatePort }}"
            - name: REDIS_PUBLIC_PORT
              value: "{{ .Values.redisInfo.redisPublicPort }}"
            - name: MATCHMAKING_URL
              value: "http://gts-front-end.open-match.svc.cluster.local:51504"
            - name: LOBBYSERVER_URL
              value: "http://my-restful-service.gts-lobby-server.svc.cluster.local"
            - name: AZURE_RESOURCE_GROUP
              value: "{{ .Values.azureInfo.resourceGroup }}"
            - name: AZURE_KUBE_NAME
              value: "{{ .Values.azureInfo.kubeName }}"
            - name: ACCESS_INFOS_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: lobby-server-secret
                  key: lobby-server-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password
            - name: S3_DATA_URL
              value: "{{ .Values.s3Data.url }}"
            - name: RABBITMQ_URL
              value: "{{ .Values.rabbitMQ.url }}"
            - name: BUILD_ENV
              value: "SERVER"
      volumes:
        - name: kubeconfig-volume
          secret:
            secretName: kubeconfig-secret